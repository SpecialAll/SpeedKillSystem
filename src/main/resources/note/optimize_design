在这里总结一下项目优化的几个方面吧，首先该秒杀系统采用spring、springmvc、mybatis、redis、druid技术实现，
总的来说就有以下几个方面的优化：
    1、为了限制单一用户多次刷单，所以我在数据库层面将订单表建立联合主键，将订单表的商品id和订单表中的用户id建立联合主键，
       可以防止同一个用户多次刷同一件商品；
    2、在秒杀阶段采用md5+盐的加密模式，秒杀接口采用地址暴露+加密，防止刷单行为；
    3、配合spring事务实现简单的事务管理，提供回滚操作；
    4、使用redis缓存来优化效率，
        在查询阶段，先去缓存查询，如果缓存没有再去数据库查询，将查询出来的值放入到缓存中去；
        在减库存数量阶段，先删除缓存中的值，再去修改数据库的库存值，等下次使用的时候再去数据库查询更新缓存；
    5、还有一点小的优化就是：尽可能减少行锁的占用时间，因为insert、update、delete操作都会给当前行添加一个排它锁，
       所以在秒杀阶段，将订单插入放在修改库存之前，如果有刷单行为就直接返回，不用多次执行修改库存的操作，从而降低行锁占用时间；